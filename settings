#!/bin/sh

DIST_NAME="properios"

DEBUG="no" # yes/no

# Note: On Debian systems, you can get the "pristine" kernel version 
# number (different than the Debian kernel version number) for a running 
# system from the first few lines of this file: /boot/config-$(uname -r)
MAJ="v6.x" # https://mirrors.edge.kernel.org/pub/linux/kernel/
VER_NUM="6.1.140"
VER="linux-$VER_NUM" 

# Reminder: for a pkcs-12 [.p12] keypair file, you can separate out the public certificate with the following command:
#  $ openssl pkcs12 -in <path/to/file.p12> -clcerts -nokeys -out <path/to/file.crt>
CA_X509_CERT_FILE_PATH="/home/user/my-ca-public-certificate.crt"

# The X.509 certificate subject line specified here needs to be the subject line for a certificate that meets the following requirements:
#  1. It is signed by the CA selected above
#  2. The private key and X.509 certificate are on a PIV SC such as a Yubikey
# You can determine the subject line of a x509 certificate on your PIV SC by performing the following steps:
#  1. Install dependencies:
#      $ sudo apt install pcscd opensc
#  2. Enable the PC/SC daemon:
#      $ sudo systemctl enable --now pcscd
#  3. Get an overview of the keys on your PIV SC which are exposed by opensc's pkcs-11 library:
#      $ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so -O
#  4. Select a key by '--id' and print out its subject line:
#      $ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so --read-object --type cert --id 01 | openssl x509 -noout -subject
#      > Using slot 0 with a present token (0x0)
#      > subject=C = US, CN = generic x509 cert 0000-0001
#  5. Translate the subject line:
#      Output from prev. command: "subject=C = US, CN = generic x509 cert 0000-0001"
#      Correct format: "/C=US/CN=generic x509 cert 0000-0001"
SMART_CARD_X509_CERT_SUBJECT_LINE="/C=US/CN=generic x509 cert 0000-0001"
